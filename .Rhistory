eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
Not_Filled_Histograms
names_of_explanatory_variables <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
Not_Filled_Histograms <-
lapply(
names_of_variables,
function(x)
{
qplot(
eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
Not_Filled_Histograms[[1]]
Not_Filled_Histograms[[2]]
Not_Filled_Histograms[[3]]
Not_Filled_Histograms[[4]]
Not_Filled_Histograms[[5]]
Data
Data$Education
is.factor(Data$Education)
ls()
# Black-and-white histograms created for all possible variables
ls()
Data  <- read.csv2( file="./data/data.csv")
names_of_variables  <-
c(
"Age"
,"Sex"
,"Region"
,"Income"
,"Education"
,"Is_Disabled"
,"Speaks_English"
,"Is_Unemployed"
,"Was_Unemployed"
,"Unemployment_Frequency"
,"Unemployment_Spells"
)
no_of_variables <- length(names_of_variables)
names_of_explanatory_variables <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
no_of_explanatory_variables <- no_of_variables - 1
VP_SETUP <- function(x,y)
{
# create a new layout with grid
grid.newpage()
# define viewports and assign it to grid layout
pushViewport(viewport(layout = grid.layout(x,y)))
}
#############################################################################################3
# define function to easily access layout (row, col)
VP_LAYOUT <- function(x,y)
{
viewport(layout.pos.row=x, layout.pos.col=y)
}
x <- list("a", "b")
colnames(x) <- c("e", "f")
rm(x)
colnames(Data)
summary(Data)
Data  <- read.csv2( file="./data/data.csv")
Data  <- Data[,-1]
Data$Unemployment_Frequency
Not_Filled_Histograms <-
lapply(
names_of_variables,
function(x)
{
qplot(
eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
library(ggplot2)
library(gridExtra)
library(plyr)
library(xtable)
library(lattice)
library(mlmRev)
library(mi)
library(plotrix)
Not_Filled_Histograms <-
lapply(
names_of_variables,
function(x)
{
qplot(
eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
Not_Filled_Histograms[[5]]
is.factor(Data$Education)
load("./data/diagnozaOsoby2011.RData")
names_of_variables  <-
c(
"Age"
,"Sex"
,"Region"
,"Income"
,"Education"
,"Is_Disabled"
,"Speaks_English"
,"Is_Unemployed"
,"Was_Unemployed"
,"Unemployment_Frequency"
,"Unemployment_Spells"
)
# Preparing data
set <- data.frame(2011-diagnozaOsoby2011[,2071],
diagnozaOsoby2011[,51],
diagnozaOsoby2011[,54],
diagnozaOsoby2011[,585], #937
diagnozaOsoby2011[,82],
diagnozaOsoby2011[,1542],
diagnozaOsoby2011[,1530],
diagnozaOsoby2011[,2038],
diagnozaOsoby2011[,1581],
diagnozaOsoby2011[,1582],
diagnozaOsoby2011[,2044])
attr(set,"names") 	<- names_of_variables
levels(set$Sex) 	<- c(NA,"Male","Female")
levels(set$Speaks_English) 	<- c(NA,"Actively","Passively","Not")
levels(set$Education) 	<- c(NA,"Above_PHD","Master","Bachelor",
"Vocational","Vocational","Secondary"
,"Vocational","Lower","Lower","Lower","NA")
levels(set$Is_Disabled) 	<- c(NA,"High","Medium","Low")
# Czy jest bezrobotny?
levels(set$Is_Unemployed) 	<- c(NA,"Yes","No")
rm( diagnozaOsoby2011 )
write.csv2( set , file="./data/data_censored.csv", col.names = TRUE, row.names = TRUE)
set$Is_Disabled <- sapply(set$Is_Disabled, function(x) { as.factor(if (is.na(x)) "Not" else x) })
set$Unemployment_Frequency <- sapply(1:nrow(set),
function(x)
{
if (is.na(set$Unemployment_Frequency[x]) && ifelse(is.na(set$Was_Unemployed[x]),0,set$Was_Unemployed[x])==2) 0
else set$Unemployment_Frequency[x]  })
# Jak długo przebywa obecnie na bezrobociu, podane w liczbie miesiący. Przypusz
set$Unemployment_Spells <- sapply(1:nrow(set),
function(x) {
if (is.na(set$Unemployment_Spells[x]) && ifelse(is.na(set$Is_Unemployed[x]),"NA",as.character(set$Is_Unemployed[x]))=="No") 0
else set$Unemployment_Spells[x] })
set <- na.omit(set[,c(1,2,3,4,5,6,7,8,10,11)])
summary(set)
write.csv2( set , file="./data/data.csv", col.names = TRUE, row.names = TRUE)
rm("set","names_of_variables")
Data  <- read.csv2( file="./data/data.csv")
Censored_Data <- read.csv2( file="./data/data_censored.csv")
Data  <- Data[,-1]
Data  <- read.csv2( file="./data/data.csv")
head(Data)
Data  <- Data[,-1]
head(Data)
colnames(Data)
ls()
ls()
oldpar <- par()
par(mar=c(4,8,4,4),mfrow=c(1,1))
missing.pattern.plot(Censored_Data, y.order=T, x.order=T, main="",
obs.col = "orange", mis.col = "green")
los2 <- sample(1:nrow(Censored_Data),size=1000,replace=FALSE)
Censored_Data[los2,]
head(Censored_Data[los2,]  )
N	<- function(x)
{
if (is.element( x, names_of_variables ))
{ return( which( names_of_variables == x ) ) }
else
if (is.element( x, names_of_variables )) return( which( names_of_variables == x ) )
else return("error")
}
N(1)
N("Age")
ls()
names_of_variables  <-
c(
"Age"
,"Sex"
,"Region"
,"Income"
,"Education"
,"Is_Disabled"
,"Speaks_English"
,"Is_Unemployed"
,"Was_Unemployed"
,"Unemployment_Frequency"
,"Unemployment_Spells"
)
N	<- function(x)
{
if (is.element( x, names_of_variables ))
{ return( which( names_of_variables == x ) ) }
else
if (is.element( x, names_of_variables )) return( which( names_of_variables == x ) )
else return("error")
}
N("Age")
N("Age")
N("Sex")
N("Region")
N("Income")
N("Education")
N("Is_Disabled")
N("Speaks_English")
N("Is_Unemployed")
N("Was_Unemployed")
N("Unemployment_Frequency")
N("Unemployment_Spells")
GET_HISTOGRAM 	<- function(Binned_Variable, Filling_Variable)
{
x <- N(Filling_Variable)
y <- N(Binned_Variable)
if (x < y ) return(Filled_Histograms[[x]][[y-1]])
else
return( Filled_Histograms[[x]][[y]] )
}
FILLED_HISTOGRAMS_MAKER <-
function(
Input_Data,				# data.frame
Variable_Name_that_will_Color_Bars	# characters
)
{
Names_of_Variables	 	<- colnames(Input_Data)
# Frowing out the variable that fills histograms
Other_Names_than_Variable_Name 	<- 	setdiff(
Names_of_Variables,
Variable_Name_that_will_Color_Bars
)
# Making histograms
# Note: scale_fill_discrete changest the legend name
return
(
lapply(
Other_Names_than_Variable_Name,
function(x)
{
qplot(
eval(parse(text = x)),
data = Input_Data,
geom="bar",
ylab="No of people",
xlab=gsub("_", " ", x),
fill=eval(parse(text = Variable_Name_that_will_Color_Bars)),
position="stack"
) + coord_flip() + scale_fill_discrete(name=gsub("_", " ", Variable_Name_that_will_Color_Bars))
}
)
)
}
HIST_LIST_UNWRAPPED <- function( Input_Data )
{
Variable_Names 	<- colnames( Input_Data )
No_of_Variables	<- length(Variable_Names)
tmp 	<- vector("list", No_of_Variables)
for (i in 1:No_of_Variables)
{
if
(
length(
levels(
eval(
parse(
text = 	paste(
"Data$",
Variable_Names[i],
sep=""
)
)
)
)
) == 0
)
{
tmp[[i]] <- list("")
}
else
{
tmp[[i]] <- FILLED_HISTOGRAMS_MAKER(Data, Variable_Names[i])
}
}
return(tmp)
}
Filled_Histograms	<- HIST_LIST_UNWRAPPED(Data)
GET_HISTOGRAM("Sex", "Age")
ls()
Filled_Histograms[[1]]
Filled_Histograms[[2]]
Filled_Histograms[[2]][[2]]
ls()
GET_HISTOGRAM("Sex", "Age")
GET_HISTOGRAM("Sex", "Region")
Filled_Histograms[[2]][[3]]
Filled_Histograms[[2]][[3]]
Filled_Histograms[[2]][[3]]
class(Filled_Histograms[[2]][[3]])
Filled_Histograms[[2]][[3]]
Filled_Histograms[[2]][[4]]
GET_HISTOGRAM("Sex", "Region")
ls()
Data  <- read.csv2( file="./data/data.csv")
Data  <- Data[,-1]
colnames(Data)
names_of_variables  <-
c(
"Age"
,"Sex"
,"Region"
,"Income"
,"Education"
,"Is_Disabled"
,"Speaks_English"
,"Is_Unemployed"
,"Was_Unemployed"
,"Unemployment_Frequency"
,"Unemployment_Spells"
)
no_of_variables <- length(names_of_variables)
Data  <- Data[,-1]
colnames(Data)
Data  <- read.csv2( file="./data/data.csv")
colnames(Data)
Data  <- Data[,-1]
colnames(Data)
names_of_variables  <- colnames(Data)
names_of_variables
Not_Filled_Histograms <-
lapply(
names_of_variables,
function(x)
{
qplot(
eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
source("./sripts_R/setting_up_libraries.R")
source("./setting_up_libraries.R")
source("setting_up_libraries.R")
getwd()
source("./scripts_R/setting_up_libraries.R")
Not_Filled_Histograms <-
lapply(
names_of_variables,
function(x)
{
qplot(
eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
Not_Filled_Histograms[[5]]
Not_Filled_Histograms[[N("No_of_people")]]
Data  <- read.csv2( file="./data/data.csv")
Data  <- Data[,-1]
names_of_variables  <- colnames(Data)
no_of_variables <- length(names_of_variables)
names_of_variables_without_Unemployment_Spells <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
names_of_variables_without_Unemployment_Frequency <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
names_of_variables_without_Unemployment_Spells_and_Frequency <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
colnames(Data)
Poisson_Model 		<- glm( Data$Unemployment_Frequency ~ ., data=names_of_variables_without_Unemployment_Frequency , family=poisson)
Data_desribing_Unemployment_Frequency <- Data[,names_of_variables_without_Unemployment_Frequency ]
Poisson_Model 		<- glm( Data$Unemployment_Frequency ~ ., data= Data_desribing_Unemployment_Frequency , family=poisson)
Poisson_Big_Summary 	<- summary( Poisson_Model )
Poisson_Summary		<- TRANSLATE_RESULTS( Poisson_Big_Summary$coefficients )
Poisson_Big_Summary
Poisson_Summary		<- TRANSLATE_RESULTS( Poisson_Big_Summary$coefficients )
Poisson_Big_Summary$coefficients
source("./scripts_R/ancilliary_functions.R")
Poisson_Summary		<- TRANSLATE_RESULTS( Poisson_Big_Summary$coefficients )
Relative_Binary_Change 	<- as.matrix( sapply( Poisson_Summary[,1], RELATIVE_CHANGE), nrows = nrow(Poisson_Summary), ncol=1 )
colnames(Relative_Binary_Change) <- "Effects"
Poisson_Summary		<- cbind(Poisson_Summary, Relative_Binary_Change)
Poisson_Summary
source("./scripts_R/ancilliary_functions.R")
Not_Filled_Histograms <-
lapply(
names_of_variables,
function(x)
{
qplot(
eval(parse(text = x)),
data = Data,
geom="histogram",
ylab="No of people",
xlab=gsub("_", " ", x)
) + coord_flip()
}
)
Not_Filled_Histograms[[N("No_of_people")]]
GET_HISTOGRAM("Age")
GET_HISTOGRAM("Sex")
GET_HISTOGRAM("Unemployment_Spell")
GET_HISTOGRAM("Unemployment_Spells")
GET_HISTOGRAM("Unemployment_Frequency")
source("./scripts_R/setting_up_libraries.R")
source("./scripts_R/histograms.R")
source("./scripts_R/ancilliary_functions.R")
GET_HISTOGRAM("Unemployment_Frequency")
GET_HISTOGRAM("Unemployment_Spells")
source("./scripts_R/histograms.R")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age")
Filled_Histograms	<- HIST_LIST_UNWRAPPED(Data)
Filled_Histograms[[2]][[2]]
ls()
N(Region)
N("Region")
N("Sex")
Filled_Histograms[[2]][[2]]
GET_HISTOGRAM("Region", "Sex")
GET_FILLED_HISTOGRAM("Region", "Sex")
Filled_Histograms[[2]][[4]]
print(GET_FILLED_HISTOGRAM("Region", "Sex"))
source("./scripts_R/ancilliary_functions.R")
source("./scripts_R/ancilliary_functions.R")
GET_FILLED_HISTOGRAM("Region", "Sex")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex")
colnames(Data)
source("./scripts_R/setting_up_libraries.R")
source("./scripts_R/ancilliary_functions.R")
Data  <- read.csv2( file="./data/data.csv")
Data  <- Data[,-1]
names_of_variables  <- colnames(Data)
no_of_variables <- length(names_of_variables)
names_of_variables_without_Unemployment_Spells <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
names_of_variables_without_Unemployment_Frequency <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
names_of_variables_without_Unemployment_Spells_and_Frequency <- setdiff( names_of_variables, c("Unemployment_Spells", "Unemployment_Frequency"))
source("./scripts_R/ancilliary_functions.R")
GET_HISTOGRAM("Unemployment_Frequency")
GET_HISTOGRAM("Unemployment_Spells")
GET_HISTOGRAM("Education")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age")
GET_FILLED_HISTOGRAM("Region", "Sex")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age")
colnames(Data)
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex")
Data$Age
is.factor(Data$Age)
ordered(Data&Age)
ls()
is.ordered(Data&Age)
is.ordered(Data$Age)
ordered(Data$Age)
is.factor(Data$Age)
as.ordered(Data$Age)
is.ordered(Data$Age)
W <- as.ordered(Data$Age)
W
Data$Age <- W
is.ordered(Data$Age)
summary(Data)
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex") #Age to nie factor...
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age") #Age to nie factor...
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age") #Age to nie factor...
N("Unemployment_Spells")
N("Age")
Data$Age <- as.ordered(Data$Age)
Data$Income <- as.ordered(Data$Income)
Data$Age <- as.ordered(Data$Age)
Data$Income <- as.ordered(Data$Income)
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Incom") #Age to nie factor...
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Income") #Age to nie factor...
Data  <- read.csv2( file="./data/data.csv")
Data  <- Data[,-1]
Data$Age <- as.ordered(Data$Age)
Data$Income <- as.ordered(Data$Income)
names_of_variables  <- colnames(Data)
no_of_variables <- length(names_of_variables)
source("./scripts_R/setting_up_libraries.R")
source("./scripts_R/ancilliary_functions.R")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Income") #Age to nie factor...
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age") #Age to nie factor...
colnames(Data)
GET_HISTOGRAM("Education")
GET_HISTOGRAM("Income")
source('~/.active-rstudio-document', echo=TRUE)
GET_HISTOGRAM("Education")
GET_HISTOGRAM("Age")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Income")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Age")
GET_FILLED_HISTOGRAM("Unemployment_Spells", "Sex")
